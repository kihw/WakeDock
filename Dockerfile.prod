# Multi-stage Production Dockerfile
FROM python:3.11-slim as base

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PYTHONPATH=/app \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1 \
    PIP_DEFAULT_TIMEOUT=100

# Install system dependencies
RUN apt-get update \
    && apt-get install -y --no-install-recommends \
    build-essential \
    curl \
    git \
    libpq-dev \
    gcc \
    && rm -rf /var/lib/apt/lists/*

# Create app user
RUN groupadd -r app && useradd -r -g app app

# Set work directory
WORKDIR /app

# Install Python dependencies
COPY requirements-prod.txt .
RUN pip install --no-cache-dir -r requirements-prod.txt

# Development stage
FROM base as development

# Install development dependencies
COPY requirements-dev.txt .
RUN pip install --no-cache-dir -r requirements-dev.txt

# Copy source code
COPY . .

# Change ownership
RUN chown -R app:app /app

USER app

# Default command for development
CMD ["python", "-m", "uvicorn", "src.wakedock.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

# Test stage
FROM development as test

USER root

# Install additional test dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    postgresql-client \
    && rm -rf /var/lib/apt/lists/*

USER app

# Run tests
CMD ["python", "-m", "pytest", "tests/", "-v", "--cov=src/wakedock", "--cov-report=html", "--cov-report=term"]

# Production stage
FROM base as production

# Copy source code
COPY src/ src/
COPY alembic.ini .
COPY alembic/ alembic/

# Create necessary directories
RUN mkdir -p /app/data /app/logs \
    && chown -R app:app /app

USER app

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD python -c "import requests; requests.get('http://localhost:8000/api/v1/health')" || exit 1

# Expose port
EXPOSE 8000

# Start application
CMD ["python", "-m", "uvicorn", "src.wakedock.main:app", "--host", "0.0.0.0", "--port", "8000", "--workers", "4"]
