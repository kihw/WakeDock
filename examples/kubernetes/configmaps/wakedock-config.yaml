apiVersion: v1
kind: ConfigMap
metadata:
  name: wakedock-config
  namespace: wakedock
  labels:
    app.kubernetes.io/name: wakedock
    app.kubernetes.io/component: config
data:
  config.yml: |
    wakedock:
      domain: "wakedock.example.com"
      app_name: "WakeDock"
      app_description: "Docker service wake-up and management system"
      session_timeout: 3600
      max_login_attempts: 5
      password_min_length: 8
      require_strong_passwords: true
      host: "0.0.0.0"
      port: 8000
      debug: false
      workers: 2
      
      cors:
        enabled: true
        origins:
          - "https://wakedock.example.com"
          - "https://dashboard.wakedock.example.com"
        methods: ["GET", "POST", "PUT", "DELETE", "OPTIONS"]
        headers: ["*"]

    database:
      url: "postgresql://wakedock:password@postgres:5432/wakedock"
      pool_size: 10
      max_overflow: 20
      pool_timeout: 30
      pool_recycle: 3600
      auto_migrate: true
      backup_before_migrate: true

    docker:
      socket_path: "/var/run/docker.sock"
      api_version: "auto"
      timeout: 60
      network_name: "wakedock"
      default_restart_policy: "unless-stopped"
      image_pull_policy: "if-not-present"
      auto_cleanup: true
      cleanup_interval: 3600

    security:
      rate_limit:
        enabled: true
        storage: "redis"
        redis_url: "redis://redis:6379/0"
        global_limit:
          requests: 1000
          window: 3600
        api_limit:
          requests: 200
          window: 60
      
      validation:
        max_string_length: 1000
        max_array_length: 100
        sanitize_html: true
      
      headers:
        hsts: true
        csp: true
        csrf_protection: true
        xss_protection: true

    monitoring:
      enabled: true
      metrics_retention: "30d"
      collect_interval: 30
      
      prometheus:
        enabled: true
        endpoint: "/metrics"
        namespace: "wakedock"
      
      health_checks:
        enabled: true
        interval: 30
        timeout: 10
        retries: 3

    logging:
      level: "INFO"
      format: "json"
      
      file:
        enabled: true
        path: "/app/logs/wakedock.log"
        max_bytes: 104857600
        backup_count: 10
      
      console:
        enabled: true
        colored: false
      
      structured: true
      correlation_id: true

    services:
      defaults:
        auto_shutdown:
          enabled: true
          inactive_minutes: 30
          cpu_threshold: 5
          memory_threshold: 100
          check_interval: 300
          grace_period: 60
        
        loading_page:
          enabled: true
          title: "Starting Service..."
          message: "Please wait while we start your service"
          theme: "dark"
          estimated_time: 60
        
        health_check:
          enabled: true
          endpoint: "/health"
          timeout: 30
          retries: 3
          interval: 10

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  namespace: wakedock
  labels:
    app.kubernetes.io/name: postgres
    app.kubernetes.io/component: config
data:
  POSTGRES_DB: "wakedock"
  POSTGRES_USER: "wakedock"
  POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-config
  namespace: wakedock
  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/component: config
data:
  redis.conf: |
    maxmemory 256mb
    maxmemory-policy allkeys-lru
    save 900 1
    save 300 10
    save 60 10000
    appendonly yes
    appendfsync everysec
