#!/bin/bash

echo "üîç Phase 1: Diagnostic Complet - WakeDock Authentication"
echo "========================================================"

# Variables d'environnement
DOMAIN="admin.mtool.ovh"
API_BASE="https://${DOMAIN}/api/v1"
CONFIG_URL="https://${DOMAIN}/api/config"

echo "üìç Configuration d√©tect√©e:"
echo "  - Domaine: ${DOMAIN}"
echo "  - API Base: ${API_BASE}"
echo "  - Config URL: ${CONFIG_URL}"
echo ""

# Test 1: Connectivit√© de base
echo "1. üåê Test de connectivit√© de base"
echo "=================================="

echo "‚úì Test ping vers ${DOMAIN}:"
ping -c 2 $DOMAIN 2>/dev/null | grep "time=" || echo "‚ùå Ping √©chou√©"

echo "‚úì Test r√©solution DNS:"
nslookup $DOMAIN | grep "Address:" || echo "‚ùå DNS √©chou√©"

echo "‚úì Test HTTPS handshake:"
curl -s -I https://$DOMAIN | head -1

echo ""

# Test 2: Endpoints publics
echo "2. üîì Test des endpoints publics"
echo "================================"

echo "‚úì Test endpoint de configuration:"
CONFIG_RESPONSE=$(curl -s -w "\nHTTP_CODE:%{http_code}\nCONTENT_TYPE:%{content_type}" $CONFIG_URL)
echo "$CONFIG_RESPONSE"
echo ""

echo "‚úì Test endpoint de sant√© (si accessible):"
HEALTH_RESPONSE=$(curl -s -w "\nHTTP_CODE:%{http_code}" "${API_BASE}/health" 2>/dev/null)
echo "$HEALTH_RESPONSE"
echo ""

# Test 3: Test de login d√©taill√©
echo "3. üîë Test de login d√©taill√©"
echo "==========================="

# Pr√©parer les donn√©es de login
LOGIN_DATA='{"username": "admin", "password": "admin"}'
echo "‚úì Donn√©es de login pr√©par√©es: $LOGIN_DATA"

# Test avec debug complet
echo "‚úì Test POST login avec debug complet:"
LOGIN_RESULT=$(curl -v -X POST "${API_BASE}/auth/login" \
  -H "Content-Type: application/json" \
  -H "Accept: application/json" \
  -H "Origin: https://${DOMAIN}" \
  -H "User-Agent: WakeDock-Debug/1.0" \
  -d "$LOGIN_DATA" \
  --connect-timeout 10 \
  --max-time 30 \
  -w "\n===RESPONSE_INFO===\nHTTP_CODE:%{http_code}\nTIME_TOTAL:%{time_total}\nSIZE_DOWNLOAD:%{size_download}\n" \
  2>&1)

echo "$LOGIN_RESULT"
echo ""

# Test 4: V√©rification des logs backend
echo "4. üìã Logs backend pendant le test"
echo "=================================="

echo "‚úì Logs r√©cents du core:"
docker logs wakedock-core --tail=20 --since="1m"
echo ""

echo "‚úì Logs r√©cents du dashboard:"
docker logs wakedock-dashboard --tail=10 --since="1m"
echo ""

# Test 5: Test connectivit√© interne
echo "5. üîó Test connectivit√© interne"
echo "==============================="

echo "‚úì Test dashboard -> core:"
docker exec wakedock-dashboard curl -s -f http://wakedock-core:8000/api/v1/health | head -1 || echo "‚ùå Connexion dashboard->core √©chou√©e"

echo "‚úì Test core accessible depuis l'ext√©rieur via Caddy:"
docker exec wakedock-caddy curl -s -f http://wakedock-core:8000/api/v1/health | head -1 || echo "‚ùå Connexion caddy->core √©chou√©e"

echo ""

# Test 6: Configuration environnement
echo "6. ‚öôÔ∏è  Configuration environnement"
echo "=================================="

echo "‚úì Variables d'environnement dashboard:"
docker exec wakedock-dashboard env | grep -E "(VITE_|NODE_|API)" | sort

echo ""
echo "‚úì Variables d'environnement core:"
docker exec wakedock-core env | grep -E "(DATABASE|REDIS|API|AUTH)" | sort || echo "Aucune variable trouv√©e"

echo ""

# Test 7: Test des endpoints sp√©cifiques
echo "7. üéØ Test des endpoints sp√©cifiques"
echo "===================================="

echo "‚úì Test endpoint debug auth (si existant):"
curl -s -X POST "${API_BASE}/auth/login_debug" \
  -H "Content-Type: application/json" \
  -d "$LOGIN_DATA" | head -5 || echo "Endpoint debug non disponible"

echo ""
echo "‚úì Test endpoint login brut:"
curl -s -X POST "${API_BASE}/auth/login_raw_debug" \
  -H "Content-Type: application/json" \
  -d "$LOGIN_DATA" | head -5 || echo "Endpoint debug brut non disponible"

echo ""

# R√©sum√©
echo "üìä R√âSUM√â DU DIAGNOSTIC"
echo "======================"
echo "Temps d'ex√©cution: $(date)"
echo "Tous les tests ci-dessus termin√©s."
echo ""
echo "üëÜ Analysez les r√©sultats pour identifier:"
echo "  - Les codes HTTP retourn√©s"
echo "  - Les messages d'erreur dans les logs"
echo "  - Les probl√®mes de connectivit√© r√©seau"
echo "  - Les erreurs de configuration"
echo ""
echo "üîß Prochaines √©tapes sugg√©r√©es:"
echo "  1. V√©rifier la configuration de la base de donn√©es"
echo "  2. Valider les mod√®les de donn√©es d'authentification"
echo "  3. Examiner la configuration Caddy pour le routage"
echo "  4. Tester la cr√©ation d'un utilisateur admin"
