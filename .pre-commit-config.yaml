# Pre-commit hooks configuration for WakeDock
# See https://pre-commit.com for more information

repos:
  # General hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: trailing-whitespace
        exclude: \.md$
      - id: end-of-file-fixer
      - id: check-yaml
        args: ['--unsafe']
      - id: check-json
      - id: check-toml
      - id: check-xml
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: check-case-conflict
      - id: check-merge-conflict
      - id: check-executables-have-shebangs
      - id: check-shebang-scripts-are-executable
      - id: mixed-line-ending
        args: ['--fix=lf']
      - id: pretty-format-json
        args: ['--autofix', '--indent=2']

  # Python hooks
  - repo: https://github.com/psf/black
    rev: 23.7.0
    hooks:
      - id: black
        language_version: python3
        args: ['--line-length=88']

  - repo: https://github.com/pycqa/isort
    rev: 5.12.0
    hooks:
      - id: isort
        args: ['--profile=black', '--line-length=88']

  - repo: https://github.com/pycqa/flake8
    rev: 6.0.0
    hooks:
      - id: flake8
        args: ['--max-line-length=88', '--extend-ignore=E203,W503']
        additional_dependencies:
          - flake8-docstrings
          - flake8-bugbear
          - flake8-comprehensions
          - flake8-simplify

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.5.1
    hooks:
      - id: mypy
        args: ['--ignore-missing-imports', '--no-strict-optional']
        additional_dependencies:
          - types-requests
          - types-PyYAML
          - types-redis

  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: ['-r', 'src/', '-f', 'json', '-o', 'bandit-report.json']
        exclude: tests/

  # Security hooks
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        args: ['--baseline', '.secrets.baseline']
        exclude: \.lock$|package-lock\.json$

  - repo: https://github.com/PyCQA/safety
    rev: 2.3.5
    hooks:
      - id: safety
        args: ['--json', '--output', 'safety-report.json']

  # Docker hooks
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint-docker
        args: ['--ignore', 'DL3008', '--ignore', 'DL3009']

  # JavaScript/TypeScript hooks
  - repo: https://github.com/pre-commit/mirrors-eslint
    rev: v8.47.0
    hooks:
      - id: eslint
        files: \.(js|ts|vue)$
        types: [file]
        additional_dependencies:
          - eslint@8.47.0
          - '@typescript-eslint/parser@6.4.1'
          - '@typescript-eslint/eslint-plugin@6.4.1'

  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v3.0.1
    hooks:
      - id: prettier
        files: \.(js|ts|json|yaml|yml|md|html|css|scss|vue|svelte)$
        exclude: \.min\.(js|css)$

  # Markdown hooks
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.36.0
    hooks:
      - id: markdownlint
        args: ['--fix']
        exclude: CHANGELOG\.md

  # YAML hooks
  - repo: https://github.com/adrienverge/yamllint
    rev: v1.32.0
    hooks:
      - id: yamllint
        args: ['-d', 'relaxed']

  # Shell script hooks
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.9.0.5
    hooks:
      - id: shellcheck
        args: ['--severity=warning']

  # Dockerfile hooks
  - repo: https://github.com/AleksaC/hadolint-py
    rev: v2.12.0.3
    hooks:
      - id: hadolint
        args: ['--ignore', 'DL3008', '--ignore', 'DL3009']

  # Git hooks
  - repo: https://github.com/commitizen-tools/commitizen
    rev: 3.6.0
    hooks:
      - id: commitizen
        stages: [commit-msg]

  # Local hooks
  - repo: local
    hooks:
      # Custom Python tests
      - id: pytest-check
        name: pytest-check
        entry: bash -c 'cd dashboard && if [ -f venv/bin/activate ]; then source venv/bin/activate; fi && python -m pytest tests/unit/ --tb=short'
        language: system
        pass_filenames: false
        always_run: false
        files: ^(src/|tests/).*\.py$

      # Custom JavaScript tests
      - id: npm-test
        name: npm-test
        entry: bash -c 'cd dashboard && npm test'
        language: system
        pass_filenames: false
        always_run: false
        files: ^dashboard/.*\.(js|ts|vue|svelte)$

      # Security audit
      - id: security-audit
        name: security-audit
        entry: bash -c 'if [ -f venv/bin/activate ]; then source venv/bin/activate; fi && safety check --json --output safety-report.json || true'
        language: system
        pass_filenames: false
        always_run: false
        files: ^requirements.*\.txt$

      # Docker compose validation
      - id: docker-compose-check
        name: docker-compose-check
        entry: docker-compose config
        language: system
        files: docker-compose.*\.yml$
        pass_filenames: false

      # Check for TODO/FIXME comments
      - id: check-todos
        name: check-todos
        entry: bash -c 'if grep -rn "TODO\|FIXME\|XXX\|HACK" src/ tests/ --exclude-dir=__pycache__ --exclude="*.pyc"; then echo "Warning: Found TODO/FIXME comments"; fi'
        language: system
        pass_filenames: false
        always_run: true

      # Check Python imports
      - id: check-python-imports
        name: check-python-imports
        entry: bash -c 'if [ -f venv/bin/activate ]; then source venv/bin/activate; fi && python -c "import sys; import pkgutil; [__import__(name) for _, name, _ in pkgutil.iter_modules([\"src\"])]"'
        language: system
        pass_filenames: false
        files: ^src/.*\.py$

      # Database migration check
      - id: migration-check
        name: migration-check
        entry: bash -c 'if [ -d "src/wakedock/database/migrations" ]; then echo "Checking migrations..."; ls src/wakedock/database/migrations/versions/ | wc -l; fi'
        language: system
        pass_filenames: false
        files: ^src/wakedock/database/migrations/.*\.py$

# Configuration
default_stages: [commit]
fail_fast: false
minimum_pre_commit_version: 3.0.0

# CI configuration
ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit.com hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: []
  submodules: false
