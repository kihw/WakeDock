version: '3.8'

networks:
  wakedock:
    driver: overlay
    attachable: true

volumes:
  postgres_data:
  redis_data:
  caddy_data:
  caddy_config:

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: wakedock
      POSTGRES_USER: wakedock
      POSTGRES_PASSWORD: wakedock_dev_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - wakedock
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U wakedock"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - wakedock
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  wakedock:
    image: wakedock-api:latest
    environment:
      - DATABASE_URL=postgresql://wakedock:wakedock_dev_password@postgres:5432/wakedock
      - REDIS_URL=redis://redis:6379
      - DEBUG=true
      - SECRET_KEY=${SECRET_KEY:-$(openssl rand -hex 32)}
      - CORS_ORIGINS=${CORS_ORIGINS:-http://localhost:3000,https://mtool.ovh,https://admin.mtool.ovh}
      - CORS_ALLOW_CREDENTIALS=true
      - CORS_ALLOW_METHODS=${CORS_ALLOW_METHODS:-GET,POST,PUT,DELETE,OPTIONS}
      - CORS_ALLOW_HEADERS=${CORS_ALLOW_HEADERS:-Content-Type,Authorization,X-Requested-With}
    networks:
      - wakedock
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    depends_on:
      - postgres
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  dashboard:
    image: wakedock-dashboard:latest
    networks:
      - wakedock
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    depends_on:
      - wakedock
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

  caddy:
    image: caddy:2.7-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./caddy/Caddyfile.domains:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    environment:
      - HOST_URL=mtool.ovh
      - DASHBOARD_URL=admin.mtool.ovh
      - API_URL=api.mtool.ovh
    networks:
      - wakedock
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    depends_on:
      - wakedock
      - dashboard
