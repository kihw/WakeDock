services:
  wakedock:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: wakedock-core
    restart: ${RESTART_POLICY:-unless-stopped}
    ports:
      - "${WAKEDOCK_CORE_PORT:-8000}:8000"
    volumes:
      - ${DOCKER_SOCKET_PATH:-/var/run/docker.sock}:/var/run/docker.sock
      - ${WAKEDOCK_CONFIG_DIR:-./config}:/app/config
      - ${WAKEDOCK_CORE_DATA:-./data}:/app/data
      - ${WAKEDOCK_LOGS_DIR:-./logs}:/app/logs
    environment:
      - WAKEDOCK_CONFIG_PATH=/app/config/config.yml
      - WAKEDOCK_DATA_PATH=/app/data
      - WAKEDOCK_LOG_LEVEL=${WAKEDOCK_LOG_LEVEL:-INFO}
      - WAKEDOCK_DEBUG=${WAKEDOCK_DEBUG:-false}
    networks:
      - ${WAKEDOCK_NETWORK:-wakedock-network}
    depends_on:
      - caddy

  caddy:
    image: caddy:2-alpine
    container_name: wakedock-caddy
    restart: ${RESTART_POLICY:-unless-stopped}
    ports:
      - "${CADDY_HTTP_PORT:-80}:80"
      - "${CADDY_HTTPS_PORT:-443}:443"
      - "${CADDY_ADMIN_PORT:-2019}:2019" # Admin API
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile
      - ${CADDY_DATA_DIR:-./caddy/data}:/data
      - ${CADDY_CONFIG_DIR:-./caddy/config}:/config
    environment:
      - CADDY_AUTO_HTTPS=${CADDY_AUTO_HTTPS:-true}
      - CADDY_ADMIN_API_ENABLED=${CADDY_ADMIN_API_ENABLED:-true}
    networks:
      - ${WAKEDOCK_NETWORK:-wakedock-network}

  dashboard:
    build:
      context: ./dashboard
      dockerfile: Dockerfile
    container_name: wakedock-dashboard
    restart: ${RESTART_POLICY:-unless-stopped}
    ports:
      - "${DASHBOARD_PORT:-3000}:3000"
    volumes:
      - ${DASHBOARD_DATA_DIR:-./dashboard/data}:/app/data
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - WAKEDOCK_API_URL=${WAKEDOCK_API_URL:-http://wakedock:8000}
    networks:
      - ${WAKEDOCK_NETWORK:-wakedock-network}
    depends_on:
      - wakedock

networks:
  wakedock-network:
    name: ${WAKEDOCK_NETWORK:-wakedock-network}
    driver: bridge

volumes:
  wakedock_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${WAKEDOCK_CORE_DATA:-./data}

  caddy_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${CADDY_DATA_DIR:-./caddy/data}

  caddy_config:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${CADDY_CONFIG_DIR:-./caddy/config}

  dashboard_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DASHBOARD_DATA_DIR:-./dashboard/data}
