[tox]
envlist = py39, py310, py311, py312, lint, coverage
isolated_build = True

[testenv]
deps = -r requirements.txt
commands = 
    pytest {posargs}
setenv =
    PYTHONPATH = {toxinidir}/src
    DATABASE_URL = sqlite:///tmp/test.db

[testenv:lint]
deps = 
    flake8
    black
    isort
    mypy
commands =
    flake8 src tests
    black --check src tests
    isort --check-only src tests
    mypy src

[testenv:format]
deps =
    black
    isort
commands =
    black src tests
    isort src tests

[testenv:coverage]
deps = 
    -r requirements.txt
    coverage
commands =
    coverage run -m pytest
    coverage report -m
    coverage html

[testenv:integration]
deps = -r requirements.txt
commands = 
    pytest tests/integration -v
setenv =
    PYTHONPATH = {toxinidir}/src
    DATABASE_URL = sqlite:///tmp/integration_test.db

[testenv:docker]
deps = -r requirements.txt
commands = 
    pytest tests -m docker -v
setenv =
    PYTHONPATH = {toxinidir}/src
    DATABASE_URL = sqlite:///tmp/docker_test.db

[flake8]
max-line-length = 88
exclude = .git,__pycache__,venv,.venv,.tox,dist,build,*.egg
ignore = E203,W503,E501

[coverage:run]
source = src/wakedock
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */venv/*
    */migrations/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
