# Development override for docker-compose.yml
# Use with: docker-compose -f docker-compose.yml -f docker-compose.dev.yml up

services:
  wakedock:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    env_file:
      - .env
    volumes:
      - ./src:/app/src
      - ./config:/app/config
      - ./tests:/app/tests
      - ${WAKEDOCK_LOGS_DIR}:/app/logs
    environment:
      - WAKEDOCK_DEBUG=${DEV_WAKEDOCK_DEBUG}
      - WAKEDOCK_LOG_LEVEL=${DEV_WAKEDOCK_LOG_LEVEL}
      - WAKEDOCK_RELOAD=${DEV_WAKEDOCK_RELOAD}
      - PYTHONPATH=/app/src
    ports:
      - "${WAKEDOCK_CORE_PORT}:8000"
      - "${DEBUG_PORT}:5678" # Debugger port
    depends_on:
      - redis
      - db
      - caddy

  dashboard:
    build:
      context: ./dashboard
      dockerfile: Dockerfile.dev
    env_file:
      - .env
    volumes:
      - ./dashboard/src:/app/src
      - ./dashboard/static:/app/static
      - ./dashboard/package.json:/app/package.json
      - ./dashboard/package-lock.json:/app/package-lock.json
    environment:
      - NODE_ENV=${DEV_NODE_ENV}
      - WAKEDOCK_API_URL=http://wakedock:8000
      - CHOKIDAR_USEPOLLING=${DEV_CHOKIDAR_USEPOLLING}
    ports:
      - "${DASHBOARD_PORT}:3000"
      - "${HMR_PORT}:24678" # HMR port
    depends_on:
      - wakedock

  caddy:
    env_file:
      - .env
    volumes:
      - ./caddy/Caddyfile.dev:/etc/caddy/Caddyfile
      - ./caddy/templates:/etc/caddy/templates
      - ${CADDY_DATA_DIR}:/data
      - ${CADDY_CONFIG_DIR}:/config
    environment:
      - CADDY_ADMIN=0.0.0.0:2019
    ports:
      - "${CADDY_ADMIN_PORT}:2019" # Caddy admin API port

  # Development databases
  redis:
    image: redis:7-alpine
    container_name: wakedock-redis-dev
    restart: ${RESTART_POLICY}
    env_file:
      - .env
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - ${REDIS_DATA_DIR}:/data
    command: redis-server --appendonly yes ${REDIS_PASSWORD:+--requirepass $REDIS_PASSWORD}
    networks:
      - ${WAKEDOCK_NETWORK}

  db:
    image: postgres:15-alpine
    container_name: wakedock-postgres-dev
    restart: ${RESTART_POLICY}
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - ${POSTGRES_DATA_DIR}:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - ${WAKEDOCK_NETWORK}

volumes:
  redis_dev_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${REDIS_DATA_DIR}

  postgres_dev_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${POSTGRES_DATA_DIR}
